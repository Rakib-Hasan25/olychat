name: CD Pipeline - Deploy to Azure VM

on:
  push:
    branches:
      - main  # Runs only when pushing to `main` branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # FRONTEND
      - name: Create .env file for frontend
        run: |
          echo "OPENAI_KEY=${{ secrets.OPENAI_API_KEY }}" >> frontend/.env
          echo "NEXT_PUBLIC_SUPABASE_URL=${{ secrets.SUPABASE_URL }}" >> frontend/.env
          echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.SUPABASE_SERVICE_KEY }}" >> frontend/.env
          echo "NEXT_PUBLIC_BACKEND_SOCKET_URL=${{ secrets.NEXT_PUBLIC_BACKEND_SOCKET_URL }}" >> frontend/.env
          echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" >> frontend/.env
          echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> frontend/.env
      

      - name: Build and push frontend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest -f frontend/Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest

      # CHATLLM
      - name: Create .env file for chatllm
        run: |
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY}}" >> chatllm/.env
          echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" >> chatllm/.env
          echo "SUPABASE_SERVICE_KEY=${{ secrets.SUPABASE_SERVICE_KEY }}" >> chatllm/.env
          echo "NODE_BACKEND_URL=${{ secrets.NODE_BACKEND_URL }}" >> chatllm/.env
          echo "REDIS_HOST=${{ secrets.REDIS_HOST}}" >> chatllm/.env


      - name: Build and push chatllm image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/chatllm:latest -f chatllm/Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/chatllm:latest

      # SEARCHTRY
      - name: Create .env file for searchtry
        run: |
          echo "SEARXNG_API_URL=${{ "http://searxng:8080" }}" >> searchtry/.env

      - name: Build and push searchtry image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/searchtry:latest -f searchtry/Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/searchtry:latest

      # DEPLOY TO AZURE VM
      - name: Deploy to Azure VM
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AZURE_VM_IP }}
          username: ${{ secrets.AZURE_VM_USERNAME }}
          key: ${{ secrets.AZURE_VM_SSH_KEY }}
          script: |
            # Stop existing containers
            docker compose -f /home/${{ secrets.AZURE_VM_USERNAME }}/ultimate-chat/searchtry/docker-compose.yml down
            
            # Pull new images
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/chatllm:latest
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/searchtry:latest

            # Start containers
            docker compose -f /home/${{ secrets.AZURE_VM_USERNAME }}/ultimate-chat/searchtry/docker-compose.yml up -d
